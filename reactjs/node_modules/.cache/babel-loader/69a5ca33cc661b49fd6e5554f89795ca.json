{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Laravel - React - CRUD\\\\reactjs\\\\src\\\\PrivateRoute.js\";\nimport React from 'react';\nimport { Navigate, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PrivateRoute(_ref) {\n  let {\n    element: element,\n    ...restOfProps\n  } = _ref;\n  console.log(\"this\", localStorage.getItem(''));\n  return /*#__PURE__*/_jsxDEV(Route, { ...restOfProps,\n    render: props => localStorage.getItem(\"token\") ? /*#__PURE__*/_jsxDEV(\"element\", { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 41\n    }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 66\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_c = PrivateRoute;\nexport default PrivateRoute; // const PrivateRoute = ({ element, path }) => {\n//     if(localStorage.getItem('token'))\n//     {\n//         console.log(\"if part\");\n//         return <Route path={path} element={element} />;\n//     }\n//     else\n//     {\n//         console.log(\"else part\");\n//         <Navigate to=\"/\" replace />\n//     }\n// //   localStorage.getItem('token')\n// //     ? element\n// //     : <Navigate to=\"/\" replace />;\n// }\n// export default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["C:/xampp/htdocs/Laravel - React - CRUD/reactjs/src/PrivateRoute.js"],"names":["React","Navigate","Route","PrivateRoute","element","restOfProps","console","log","localStorage","getItem","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;;;AAEA,SAASC,YAAT,OAA4D;AAAA,MAAtC;AAAEC,IAAAA,OAAO,EAAEA,OAAX;AAAoB,OAAGC;AAAvB,GAAsC;AAC1DC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBC,YAAY,CAACC,OAAb,CAAqB,EAArB,CAApB;AAEA,sBACE,QAAC,KAAD,OACMJ,WADN;AAEE,IAAA,MAAM,EAAGK,KAAD,IACNF,YAAY,CAACC,OAAb,CAAqB,OAArB,iBAAgC,wBAAaC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAhC,gBAAyD,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAH7D;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KAXQP,Y;AAaT,eAAeA,YAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA","sourcesContent":["import React from 'react';\r\nimport { Navigate, Route } from \"react-router-dom\";\r\n\r\nfunction PrivateRoute({ element: element, ...restOfProps }) {\r\n  console.log(\"this\", localStorage.getItem(''));\r\n\r\n  return (\r\n    <Route\r\n      {...restOfProps}\r\n      render={(props) =>\r\n        localStorage.getItem(\"token\") ? <element {...props} /> : <Navigate to=\"/register\" />\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default PrivateRoute;\r\n\r\n// const PrivateRoute = ({ element, path }) => {\r\n//     if(localStorage.getItem('token'))\r\n//     {\r\n//         console.log(\"if part\");\r\n//         return <Route path={path} element={element} />;\r\n//     }\r\n//     else\r\n//     {\r\n//         console.log(\"else part\");\r\n//         <Navigate to=\"/\" replace />\r\n//     }\r\n// //   localStorage.getItem('token')\r\n// //     ? element\r\n// //     : <Navigate to=\"/\" replace />;\r\n\r\n// }\r\n\r\n// export default PrivateRoute;\r\n\r\n"]},"metadata":{},"sourceType":"module"}