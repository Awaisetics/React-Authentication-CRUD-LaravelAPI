{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport { Navigate } from \"react-router-dom\";\nimport axios from 'axios';\nimport swal from 'sweetalert';\n\nfunction EditStudent() {\n  _s();\n\n  const navigate = useNavigate();\n  const [studentInput, setStudent] = useState([]);\n  const [errorInput, setError] = useState([]);\n  const {\n    id\n  } = useParams();\n  const Auth_token = localStorage.getItem('token');\n  useEffect(() => {\n    axios.get(`http://127.0.0.1:8000/api/edit-student/${id}`, {\n      headers: {\n        'Content-Type': 'application/json;charset=UTF-8',\n        'Accept': 'application/json',\n        'Authorization': `Bearer ${Auth_token}`\n      }\n    }).then(res => {\n      if (res.data.status === 200) {\n        setStudent(res.data.student);\n      } else if (res.data.status === 404) {\n        navigate('/students');\n      }\n    });\n  }, [navigate]);\n\n  const handleInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setStudent({ ...studentInput,\n      [name]: value\n    });\n  };\n\n  const updateStudent = e => {\n    e.preventDefault();\n    const data = {\n      name: studentInput.name,\n      course: studentInput.course,\n      email: studentInput.email,\n      phone: studentInput.phone\n    };\n    axios.put(`http://127.0.0.1:8000/api/update-student/${id}`, data, {\n      headers: {\n        'Content-Type': 'application/json;charset=UTF-8',\n        'Accept': 'application/json',\n        'Authorization': `Bearer ${Auth_token}`\n      }\n    }).then(res => {\n      if (res.data.status === 200) {\n        swal({\n          title: \"Success!\",\n          text: \"Student Record Updated\",\n          icon: \"success\",\n          timer: 2000,\n          button: false\n        });\n        setError([]);\n        navigate('/students');\n      } else if (res.data.status === 422) {\n        swal(\"All fields are mandetory\", \"\", \"error\");\n        setError(res.data.validationErrors);\n      } else if (res.data.status === 404) {\n        swal(\"Error\", res.data.message, \"error\");\n        navigate('/students');\n      }\n    });\n  };\n\n  if (localStorage.getItem('token')) {}\n}\n\n_s(EditStudent, \"sqp04JtDDS6GikCRxe5f6pD6KVY=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = EditStudent;\nexport default EditStudent;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditStudent\");","map":{"version":3,"sources":["C:/xampp/htdocs/Laravel - React - CRUD/reactjs/src/EditStudent.js"],"names":["React","useState","useEffect","Link","useNavigate","useParams","Navigate","axios","swal","EditStudent","navigate","studentInput","setStudent","errorInput","setError","id","Auth_token","localStorage","getItem","get","headers","then","res","data","status","student","handleInput","e","name","value","target","updateStudent","preventDefault","course","email","phone","put","title","text","icon","timer","button","validationErrors","message"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {Link , useNavigate, useParams} from 'react-router-dom';\r\nimport { Navigate } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\n\r\n\r\nfunction EditStudent() {\r\n\r\n    const navigate = useNavigate();\r\n    const [studentInput, setStudent] = useState([]);\r\n    const [errorInput, setError] = useState([]);\r\n    const {id} = useParams();\r\n    const Auth_token = localStorage.getItem('token');\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        axios.get(`http://127.0.0.1:8000/api/edit-student/${id}`,{\r\n                headers: {\r\n                    'Content-Type': 'application/json;charset=UTF-8',\r\n                    'Accept':'application/json',\r\n                    'Authorization': `Bearer ${Auth_token}` \r\n                    }\r\n                }).then( res => {\r\n\r\n            if(res.data.status === 200)\r\n            {\r\n                setStudent(res.data.student);\r\n            }\r\n            else if(res.data.status === 404)\r\n            {\r\n                navigate('/students');\r\n            }\r\n        });\r\n\r\n    }, [navigate]);\r\n\r\n    const handleInput = (e) => {\r\n        const { name, value } = e.target;\r\n        setStudent({ ...studentInput, [name]: value });\r\n    }\r\n\r\n    const updateStudent = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const data = {\r\n            name: studentInput.name,\r\n            course: studentInput.course,\r\n            email: studentInput.email,\r\n            phone: studentInput.phone,\r\n        }\r\n\r\n        axios.put(`http://127.0.0.1:8000/api/update-student/${id}`, data,{\r\n                headers: {\r\n                    'Content-Type': 'application/json;charset=UTF-8',\r\n                    'Accept':'application/json',\r\n                    'Authorization': `Bearer ${Auth_token}` \r\n                    }\r\n                }).then(res=>{\r\n            if(res.data.status === 200)\r\n            {\r\n                swal({\r\n                        title: \"Success!\",\r\n                        text: \"Student Record Updated\",\r\n                        icon: \"success\",\r\n                        timer: 2000,\r\n                        button: false\r\n                })\r\n                setError([]);\r\n                navigate('/students');\r\n            }\r\n              else if(res.data.status === 422)\r\n            {\r\n                swal(\"All fields are mandetory\",\"\",\"error\");\r\n                setError(res.data.validationErrors);\r\n            }\r\n            else if(res.data.status === 404)\r\n            {\r\n                swal(\"Error\",res.data.message,\"error\");\r\n                navigate('/students');\r\n            }\r\n        });\r\n    }\r\n\r\n        if (localStorage.getItem('token'))\r\n        {\r\n\r\n        }\r\n    \r\n\r\n\r\n}\r\n\r\nexport default EditStudent;"]},"metadata":{},"sourceType":"module"}