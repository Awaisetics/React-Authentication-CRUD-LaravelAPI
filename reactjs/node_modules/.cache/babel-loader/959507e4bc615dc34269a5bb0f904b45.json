{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Laravel - React - CRUD\\\\reactjs\\\\src\\\\PrivateRoute.js\";\nimport React from 'react';\nimport { Navigate, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PrivateRoute(path, component) {\n  console.log(\"this\", localStorage.getItem('token '));\n  if (localStorage.getItem('token')) return /*#__PURE__*/_jsxDEV(Route, {\n    path: path\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_c = PrivateRoute;\nexport default PrivateRoute; // const PrivateRoute = ({ element, path }) => {\n//     if(localStorage.getItem('token'))\n//     {\n//         console.log(\"if part\");\n//         return <Route path={path} element={element} />;\n//     }\n//     else\n//     {\n//         console.log(\"else part\");\n//         <Navigate to=\"/\" replace />\n//     }\n// //   localStorage.getItem('token')\n// //     ? element\n// //     : <Navigate to=\"/\" replace />;\n// }\n// export default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["C:/xampp/htdocs/Laravel - React - CRUD/reactjs/src/PrivateRoute.js"],"names":["React","Navigate","Route","PrivateRoute","path","component","console","log","localStorage","getItem"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;;;AAEA,SAASC,YAAT,CAAsBC,IAAtB,EAA6BC,SAA7B,EAAwC;AACtCC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAApB;AACA,MAAGD,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAH,EACA,oBACE,QAAC,KAAD;AAAO,IAAA,IAAI,EAAEL;AAAb;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;KANQD,Y;AAQT,eAAeA,YAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA","sourcesContent":["import React from 'react';\r\nimport { Navigate, Route } from \"react-router-dom\";\r\n\r\nfunction PrivateRoute(path , component) {\r\n  console.log(\"this\", localStorage.getItem('token '));\r\n  if(localStorage.getItem('token'))\r\n  return (\r\n    <Route path={path} />\r\n  );\r\n}\r\n\r\nexport default PrivateRoute;\r\n\r\n// const PrivateRoute = ({ element, path }) => {\r\n//     if(localStorage.getItem('token'))\r\n//     {\r\n//         console.log(\"if part\");\r\n//         return <Route path={path} element={element} />;\r\n//     }\r\n//     else\r\n//     {\r\n//         console.log(\"else part\");\r\n//         <Navigate to=\"/\" replace />\r\n//     }\r\n// //   localStorage.getItem('token')\r\n// //     ? element\r\n// //     : <Navigate to=\"/\" replace />;\r\n\r\n// }\r\n\r\n// export default PrivateRoute;\r\n\r\n"]},"metadata":{},"sourceType":"module"}